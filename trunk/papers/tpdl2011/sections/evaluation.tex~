The validation of the algorithm depends on the configuration of the activation and spreading processes to
fit it to the different domain issues. SA is determined by the target semantic network and therefore
the domain knowledge (concepts and relations) defined is the key part to adjust its behavior. On the other
hand, taking into account that the activation and spreading is guided by the weights of relations the specification
of them is fundamental to get the desired outputs. The methodology to test the implementation
of the algorithm is subjected to these conditions but a step-wise refinement method can be outlined:
\begin{enumerate}
  \item Use a semantic network (ontology, etc.) well-known: concepts and relations.
  \item Define a potential set of initial concepts ($\Phi$) and their initial activation value (commonly $1.0$).
  \item Specify the weights of the relations to that domain knowledge.
  \item Combine the different restrictions provided by the API.
  \item Select the degradation function.
  \item Add the reward techniques to increase the activation value of certain nodes.
  \item Try to evaluate new activation functions for their further implementation.
  \item Repeat these steps until getting the most appropriated set of output concepts to that domain knowledge.
\end{enumerate}

To apply this methodology, the Galen Ontology~\footnote{\url{http://www.opengalen.org/}} has been selected. 
It is the reference ontology in the biomedicine domain and it is widely used in reasoning and decision support processes. 
The design of the experiment depends on: the ontology, the weights of relations, 
the set of initial concepts, the set of restrictions, the degradation function and the extensions to reward nodes.
 Following these variables are specified to run the algorithm and get a good refinement of SA in the selected domain. 

The set of initial concepts ($\Phi$) with an initial value $1.0$ is: ``\#Foo'' and ``\#Bar''. The weights of the 
relations are fixed to a default value of $1.0$. The refinement of the algorithm will enable us to get
a set of output concepts similar to the process that a brain will do. The degradation functions
and the reward technique will be alternatively combined checking the output of the algorithm. Finally, the restrictions 
and their configuration values are listed in Tab.~\ref{tabla:test-restricciones}.

\begin{table}[htb]
\renewcommand{\arraystretch}{1.3}
\begin{center}
\begin{tabular}{|p{4cm}|p{2cm}|p{2cm}|p{2cm}|p{2cm}|}
\hline
        Config \& Stats/Test&T1&T2&T3&T4\\ \hline
        \hline
        Minimum activation value $N_{\min}$ &$0$ &$0$ &$0$ &$0$ \\ \hline
	Maximum number of spread concepts $\mathbb{M}$&$0$ &$0$ &$0$ &$0$\\ \hline
	Minimum number of spread concepts $\mathbb{M_{\min}}$&$0$ &$0$ &$0$ &$0$  \\ \hline
	Time of activation $t$&$0$ &$0$ &$0$ &$0$ \\ \hline
	Output Degradation $O_j$ & $h_1$ &$0$ &$0$ &$0$\\ \hline
	Reward &No &$0$ &$0$ &$0$\\ \hline
	\hline
	Context of activation $\mathbb{D}_{com}$&DEFAULT (\textit{retries}=0) &$0$ &$0$ &$0$\\ \hline
	Activated Nodes &$0$ &$0$ &$0$ &$0$ \\ \hline
	Spread Nodes &$0$ &$0$ &$0$ &$0$ \\ \hline
	Highest activation value &$0$ &$0$ &$0$ &$0$\\ \hline
	Deepest spread path &$0$ &$0$ &$0$ &$0$ \\ \hline
\hline
\end{tabular}
  \caption{Configuration and statistics of results after the execution and refinement of SA over the Galen ontology.}
  \label{tabla:test-restricciones}
  \end{center}
\end{table} 

